#!/usr/bin/perl
use diagnostics;
use strict;
use warnings;
use Redis::Client;
my $client = Redis::Client->new( host => 'localhost', port => 6379 );
my $nas=`/etc/scripts/inputIP`;
chomp($nas);


my $APMacRogue = ".1.3.6.1.4.1.14179.2.1.7.1.1"; #bsnRogueAPDot11MacAddress
my @APMacRogues = `/usr/bin/snmpwalk -v 2c -c public $nas $APMacRogue | cut -d ':' -f2`;

my $APSSID = ".1.3.6.1.4.1.14179.2.1.7.1.11";#bsnRogueAPSSID
my @APSSIDs = `/usr/bin/snmpwalk -v 2c -c public $nas $APSSID | cut -d '"' -f2`;

my $starttime = ".1.3.6.1.4.1.14179.2.1.7.1.3";#bsnRogueAPSSID
my @StartTimes = `/usr/bin/snmpwalk -v 2c -c public $nas $starttime | cut -d '"' -f2`;
my $lasttime = ".1.3.6.1.4.1.14179.2.1.7.1.4";#bsnRogueAPSSID
my @LastTimes = `/usr/bin/snmpwalk -v 2c -c public $nas $lasttime | cut -d '"' -f2`;



my $limit = scalar(@APMacRogues);
my $values;
for(my $i=0 ; $i < $limit ; $i++) {
        chomp($APMacRogues[$i]);
        chomp($APSSIDs[$i]);
        chomp($StartTimes[$i]);
        chomp($LastTimes[$i]);
	$values = "$APMacRogues[$i],$APSSIDs[$i],$StartTimes[$i],$LastTimes[$i]";
	$client->hset('roguehashes', $APMacRogues[$i] => $values);

}



