#!/usr/bin/perl
use diagnostics;
use strict;
use warnings;
use Redis::Client;
my $client = Redis::Client->new( host => 'localhost', port => 6379 );

my @keysbackup = $client->hkeys( 'roguehashes' );
my $back;
foreach my $backup(@keysbackup){
        $back = $client->hget('roguehashes', $backup);
        $client->hset('roguehashesbackup', $backup => $back);
}


$client->del('roguehashes');

#my $nas="192.168.1.2";
my $nas=`/etc/scripts/inputIP`;
chomp($nas);

my $oid         = ".1.3.6.1.4.1.14179.2.1.7.1.1";
my @snmpIPinfo  = `/usr/bin/snmpwalk -v 2c -c public $nas $oid`;

#print @snmpIPinfo;
my @MACslist = grep{/(3.6.1.4.1.14179.2.1.7.1.1\.)/} @snmpIPinfo; #bsnRogueAPDot11MacAddress
#my @MACs = `echo '@MAC' | cut -d ':' -f2`;
my @MACDeclist;

my $plimit = scalar(@MACslist);
my @split;
my @values;

for (my $p =0 ; $p < $plimit ; $p++)
{
        $MACDeclist[$p] = substr("$MACslist[$p]",30);
        @split = split /=/,$MACDeclist[$p];
        $values[$p] = $split[0];
}

my $i=0;
my $APMacRogue;
my @APMacRogues;
my $APSSID;
my @APSSIDs;
my $StartTime;
my @StartTimes;
my $LastTime;
my @LastTimes;

foreach  my $value(@values){

	$APMacRogue =".1.3.6.1.4.1.14179.2.1.7.1.1.$value";
	$APMacRogues[$i]= `/usr/bin/snmpget -v 2c -c public $nas $APMacRogue | cut -d ':' -f 2`;

	$APSSID=".1.3.6.1.4.1.14179.2.1.7.1.11.$value";
	$APSSIDs[$i]= `/usr/bin/snmpget -v 2c -c public $nas $APSSID | cut -d '"' -f 2`;

#/usr/bin/snmpget -v 2c -c public 10.25.0.5 .1.3.6.1.4.1.14179.2.1.7.1.11

	$StartTime=".1.3.6.1.4.1.14179.2.1.7.1.3.$value";
	$StartTimes[$i]= `/usr/bin/snmpget -v 2c -c public $nas $StartTime | cut -d '"' -f 2`;

	$LastTime=".1.3.6.1.4.1.14179.2.1.7.1.4.$value";
	$LastTimes[$i]= `/usr/bin/snmpget -v 2c -c public $nas $LastTime | cut -d '"' -f 2`;

	$i++;
}


my $limit = scalar(@APMacRogues);
my $values;
my @splitHex;
for(my $i=0 ; $i < $limit; $i++) {
        chomp($APMacRogues[$i]);
        chomp($APSSIDs[$i]);
        chomp($StartTimes[$i]);
        chomp($LastTimes[$i]);

	# Dit zet de Hex-String om in ASCII
	if($APSSIDs[$i] =~m/Hex/){
	@splitHex =split /:/, $APSSIDs[$i];
	(my $HexString = $splitHex[1]) =~ s/\s//g;
	$HexString =~ s/(([0-9a-f][0-9a-f])+)/pack('H*', $1)/ie;
	#print $HexString;
	$APSSIDs[$i]=$HexString;
	}

	if($APSSIDs[$i] eq ""){
	$APSSIDs[$i]="leeg";
	}
	
	$values = "$APMacRogues[$i],$APSSIDs[$i],$StartTimes[$i],$LastTimes[$i]";
	$client->hset('roguehashes', $APMacRogues[$i] => $values);

}

$client->del('roguehashesbackup');

`date > /etc/scripts/dates/daterogues`;
