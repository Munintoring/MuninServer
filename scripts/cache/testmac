#!/usr/bin/perl

#01/03/2016
# Dit script zorgt ervoor dat alle gegevens die we nodig hebben voor ons overzicht op IP in de cache komen te staan.
# D.m.v. SNMPget/walk gaan we de informatie opvragen. 
# @keysbackup wordt gebruikt tijdens de update van de cache, zodat er gedurende de update geen lege pagina getoond wordt, vanaf dat iphashes 
# geupdate is, wordt de backuphash (iphashesbackup) verwijderd en iphashes gebruikt.

use diagnostics;
use strict;
use warnings;

my $nas=`/etc/scripts/inputIP`;
chomp($nas);

my $oid         = ".1.3.6.1.4.1.14179.2.1.4.1.1";
my @snmpIPinfo  = `/usr/bin/snmpwalk -v 2c -c public $nas $oid`;

my @MACslist = grep{/(3.6.1.4.1.14179.2.1.4.1.1\.)/} @snmpIPinfo;
my @MACDeclist;

my $plimit = scalar(@MACslist);
my @split;
my @values;

#MACDec lijst genereren voor ophalen van bepaald gegeven.
for (my $p =0 ; $p < $plimit ; $p++)
{
        $MACDeclist[$p] = substr("$MACslist[$p]",30);
	@split = split /=/,$MACDeclist[$p];
	$values[$p] = $split[0];  # Enkel MACDec eruit halen
}

my $bsnMAC;
my $i = 0;
my @MAClist;

# Voor elke MACdec in de lijst gaan we de gegevens ophalen en in arrays steken.
foreach my $value(@values){

$bsnMAC  = ".1.3.6.1.4.1.14179.2.1.4.1.1.$value";
$MAClist[$i] = `/usr/bin/snmpget -v 2c -c public $nas $bsnMAC | cut -d ':' -f 2`;
print $MAClist[$i];

#my @splitt = split /\./, $value;

#$MAClist[$i] =uc(sprintf "%02x %02x %02x %02x %02x %02x\n",$splitt[0],$splitt[1],$splitt[2],$splitt[3],$splitt[4],$splitt[5]);
#print $MAClist[$i];
$i++;
}
