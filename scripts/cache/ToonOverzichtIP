#!/usr/bin/perl

# 01/03/2015
# Dit script genereert een gedetailleerd overzicht van een bepaalde user (op basis van IP)
# (voorbeeld http://193.191.187.33/monitoring/toonipinfo.php?IP=10.25.67.205)
# De info wordt uit de cache gehaald ( hash iphashes) en in de tabel gestoken.

# @keysbackup wordt gebruikt tijdens de update van de cache, zodat er gedurende de update geen lege pagina getoond wordt, vanaf dat iphashes 
# geupdate is, wordt de backuphash (iphashesbackup) verwijderd en iphashes gebruikt.

use diagnostics;
use strict;
use warnings;
use Switch;  # module switch voor protocol (zie onderaan)
use Redis::Client;
my $client = Redis::Client->new( host => 'localhost', port => 6379 ); # Connectie Redis

my $hash="iphashes";
my @keys = $client->hkeys( 'iphashes' );  # standaard worden de keys van iphashes opgehaald
my @keysbackup = $client->hkeys( 'iphashesbackup' ); # keys uit iphashesbackup ophalen (indien ze niet bestaan is @keysbackup leeg)

if(@keysbackup){  #als er een backup bestaat -> update is bezig  -> gebruik de backup
@keys = @keysbackup;
$hash = "iphashesbackup";
}


# elke waarde in de cache wordt in de tabel gestoken.
my $key;
foreach $key (@keys){  

        my $values = $client->hget( $hash , $key ); # ophalen values
        my @value=  split /,/, $values; # splitten op ","

# geheugensteuntje ( uit IPInfoInCache)
#            0           1            2          3          4         5         6           7              8
#$values ="$IPs[$i],$usernames[$i],$MACs[$i],$ssids[$i],$APMacs[$i],$nameAP,$protocol, $bytesreceives, $bytesssent";

# printen tabel + waardes
	print "\n";
	print " <div class='row'>";
        print "<div class='col-md-6'>";
	print  "<table class='table table-condensed table-responsive table-striped'>";
        print "<tbody>";
	
	print "<th> IP Address </th>";
	print "<td align='right'> $value[0]</td></tr>";

	print "<th> Username </th>";
	print "<td align='right'> $value[1]</td></tr>";


	print "<tr> <th> MAC Address </th>";
	print "<td align='right'> $value[2] </td> </tr>";

	print "<tr><th> SSID </th>";
	print "<td align='right'><a href='/monitoring/toonclientsperssid.php?SSID=$value[3]'>$value[3]</a></td></tr>";

	print "<tr><th> AP MAC  </th>";
	print "<td align='right'>$value[4]</td></tr>";

	print "<tr><th> AP Name </th>";
	print "<td align='right'> <a href='/monitoring/toonclientsperap.php?AP=$value[5]'>$value[5]</td></tr>";

	print "<tr><th> Protocol  </th>";
	print "<td align='right'>";

#dot11a(1), dot11b(2), dot11g(3), unknown(4), mobile(5), dot11n24(6), dot11n5(7)
# switch gebruikt om codes die we terugkrijgen uit protocol om te zetten in string-waardes.
	switch($value[6]){
  		 case 1            { print "dot11a (1)" }
   		 case 2            { print "dot11b (2)" }
   		 case 3            { print "dot11g (3)" }
   		 case 4            { print "unknown(4)" }
   		 case 5            { print "mobile (5)" }
   		 case 6            { print "dot11n24 (6)" }
   		 case 7            { print "dot11n5 (7)" }
		  	   
	}

	print "</td></tr>";
	print "<tr><th> Bytes Received </th>";
	print "<td align='right'>$value[7]</td></tr>";

	print "<tr><th> Bytes Sent </th>";
	print "<td align='right'>$value[8]</td></tr>";

	print "</tbody></table></div></div><br/><br/>";

}
