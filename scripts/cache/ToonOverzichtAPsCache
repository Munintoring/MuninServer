#!/usr/bin/perl

# 01/03/2015
# Dit script genereert een overzicht van alle APs (met gegevens : APnaam, vlangroup, ip, switchnaam , ...)
# (voorbeeld http://193.191.187.33/monitoring/overviewaps.php)
# Om het overzicht te tonen worden alle gegevens uit de cache gehaald ( hash 'aphashes') die er d.m.v. het script APInfoincache ingestoken zijn.
# @keysbackup wordt gebruikt tijdens de update van de cache, zodat er gedurende de update geen lege pagina getoond wordt, vanaf dat aphashes 
# geupdate is, wordt de backuphash (aphashesbackup) verwijderd en iphashes gebruikt.
use diagnostics;
use strict;
use warnings;
use Redis::Client;
my $client = Redis::Client->new( host => 'localhost', port => 6379 ); #Connectie Redis


my @keys = $client->hkeys( 'aphashes' ); # standaard worden de keys van aphashes opgehaal
my $hash="aphashes";
my @keysbackup = $client->hkeys( 'aphashesbackup' ); # keys uit iphashesbackup ophalen (indien ze niet bestaan is @keysbackup leeg)

if(@keysbackup){ #als er een backup bestaat -> update is bezig  -> gebruik de backup
@keys = @keysbackup;
$hash = "aphashesbackup";
}


# hoofdingen tabel + sorteerbaar + zoekveld
print "<div class='form-group'>";
print "<label>Zoeken in de tabel.</label>";
print "<input type='text' class='form-control' id='search' placeholder='Typ simpele zoektermen om te zoeken in de tabel.'>";
print "</div>";
print "<script src='sorttable.js'></script>";
print "<div class='row'>";
print "<div class='col-md-12'>";
print  "<table id='table' class='sortable table table-striped'>";
print "<tr>\n";
print "<th>APNaam</th>\n";
print "<th>2.4GHz</th>\n";
print "<th>5GHz</th>\n";
print "<th>Total</th>\n";
print "<th>Locatie</th>\n";
print "<th>Vlan-Group</th>\n";
print "<th class='sorttable_nosort'>IP AP</th>\n";
#print "<th>MAC AP</th>\n";
print "<th>Switch naam</th>\n";
print "<th>Switch port</th>\n";
print "</tr>\n";
my $key;
my $temp;
my $total;
my $total24;
my $total5;

# elke waarde in de cache wordt in de tabel gestoken.
foreach $key (@keys){  # key = APname


	my $values = $client->hget( $hash, $key );
	my @value=  split /,/, $values;

# geheugensteuntje values
#$values= "$APNames,$MACAPS,$usersperap,$usersperap,$locations,$ipforAP,$apvlan,$switchnames,$switchport
#              0      1         2           3           4          5       6         7           8  

	print "\n";
        print "<tr>";
        print "<td> <a href='/monitoring/toonclientsperap.php?AP=$value[0]'>$value[0]</td>";
        print "<td id='table'>$value[2]</td>";
        print "<td>$value[3]</td>";
        $temp = $value[2] + $value[3];
        $total = $total + $temp;
        $total24 = $total24 + $value[2];
        $total5 = $total5 + $value[3];

        print "<td>$temp</td>";
        print "<td>$value[4]</td>";
        print "<td>$value[6]</td>";
        print "<td>$value[5]</td>";
        #print "<td>$value[1]</td>";
        print "<td>$value[7]</td>";
        print "<td>$value[8]</td>";
        print "</tr>";


}

print "<tfoot><tr><td><h3>Totaal</h3></td><td><h3>$total24</h3></td><td><h3>$total5</h3></td><td><h3>$total</h3></td><td></td><tr></tfoot>";
print "\n</table></div></div>\n";
print "</body>\n";
print "</html>\n";

print "<script src='search.js'></script>";

